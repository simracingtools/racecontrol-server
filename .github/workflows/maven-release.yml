name: Maven release

on:
  workflow_dispatch:
    inputs:
      release-version:
        description: 'Version to release'
        required: true
      next-version:
        description: 'Next development version'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: be-release
          server-username: DEPLOY_USERNAME
          server-password: DEPLOY_PASSWORD
      - name: Maven release prepare / perform
        run: |
          git config user.name ${GITHUB_ACTOR}
          git config user.email github-actions@github.com
          git pull
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a ${SSH_AUTH_SOCK} > /dev/null
          ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"
          mvn -B release:prepare -Dmaven.test.skip=true -DreleaseVersion=${RELEASE_VERSION} -DdevelopmentVersion=${NEXT_DEV_VERSION} -Dtag=${SCM_TAG}
          mvn -B release:perform -Dmaven.test.skip=true
        env:
          github_token: ${{ github.token }}
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
          RELEASE_VERSION: ${{ github.event.inputs.release-version }}
          NEXT_DEV_VERSION: ${{ format('{0}-SNAPSHOT', github.event.inputs.next-version) }}
          SCM_TAG: ${{ format('v{0}', github.event.inputs.release-version) }}
          DEPLOY_USERNAME: ${{ secrets.DEPLOY_USERNAME }}
          DEPLOY_PASSWORD: ${{ secrets.DEPLOY_PASSWORD }}
